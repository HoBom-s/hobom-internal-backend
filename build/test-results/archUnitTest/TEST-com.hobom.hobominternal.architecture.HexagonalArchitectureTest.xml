<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" tests="7" skipped="0" failures="5" errors="0" timestamp="2025-06-21T13:34:40.467Z" hostname="gimjunhoui-MacBookPro.local" time="0.604">
  <properties/>
  <testcase name="Domain must be independent" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.59"/>
  <testcase name="Application depends only on domain and standard libraries" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.005">
    <failure message="java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'classes that reside in a package '..application..' should only depend on classes that reside in any package ['..application..', '..domain..', 'java..', 'javax..', 'kotlin..', 'org.jetbrains..']' was violated (8 times):&#10;Class &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService&gt; implements interface &lt;com.hobom.hobominternal.port.inbound.log.SaveBulkLogUseCase&gt; in (SaveBulkLogService.kt:0)&#10;Class &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService&gt; is annotated with &lt;org.springframework.stereotype.Service&gt; in (SaveBulkLogService.kt:0)&#10;Constructor &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.&lt;init&gt;(com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort)&gt; has parameter of type &lt;com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort&gt; in (SaveBulkLogService.kt:0)&#10;Field &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.saveHoBomLogPort&gt; has type &lt;com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort&gt; in (SaveBulkLogService.kt:0)&#10;Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.invoke(java.util.List)&gt; has annotation member of type &lt;org.springframework.transaction.annotation.Isolation&gt; in (SaveBulkLogService.kt:0)&#10;Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.invoke(java.util.List)&gt; has annotation member of type &lt;org.springframework.transaction.annotation.Propagation&gt; in (SaveBulkLogService.kt:0)&#10;Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.invoke(java.util.List)&gt; is annotated with &lt;org.springframework.transaction.annotation.Transactional&gt; in (SaveBulkLogService.kt:0)&#10;Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.saveBulkLog(java.util.List)&gt; calls method &lt;com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort.saveAll(java.util.List)&gt; in (SaveBulkLogService.kt:20)" type="java.lang.AssertionError">java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'classes that reside in a package '..application..' should only depend on classes that reside in any package ['..application..', '..domain..', 'java..', 'javax..', 'kotlin..', 'org.jetbrains..']' was violated (8 times):
Class &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService&gt; implements interface &lt;com.hobom.hobominternal.port.inbound.log.SaveBulkLogUseCase&gt; in (SaveBulkLogService.kt:0)
Class &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService&gt; is annotated with &lt;org.springframework.stereotype.Service&gt; in (SaveBulkLogService.kt:0)
Constructor &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.&lt;init&gt;(com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort)&gt; has parameter of type &lt;com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort&gt; in (SaveBulkLogService.kt:0)
Field &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.saveHoBomLogPort&gt; has type &lt;com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort&gt; in (SaveBulkLogService.kt:0)
Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.invoke(java.util.List)&gt; has annotation member of type &lt;org.springframework.transaction.annotation.Isolation&gt; in (SaveBulkLogService.kt:0)
Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.invoke(java.util.List)&gt; has annotation member of type &lt;org.springframework.transaction.annotation.Propagation&gt; in (SaveBulkLogService.kt:0)
Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.invoke(java.util.List)&gt; is annotated with &lt;org.springframework.transaction.annotation.Transactional&gt; in (SaveBulkLogService.kt:0)
Method &lt;com.hobom.hobominternal.application.service.log.SaveBulkLogService.saveBulkLog(java.util.List)&gt; calls method &lt;com.hobom.hobominternal.port.outbound.log.SaveHoBomLogPort.saveAll(java.util.List)&gt; in (SaveBulkLogService.kt:20)
	at com.tngtech.archunit.lang.ArchRule$Assertions.assertNoViolation(ArchRule.java:94)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:86)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.check(ArchRule.java:165)
	at com.tngtech.archunit.lang.syntax.ObjectsShouldInternal.check(ObjectsShouldInternal.java:81)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:167)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:150)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="Adapters are dependency sinks" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.003"/>
  <testcase name="Config must not leak" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.004">
    <failure message="java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'no classes that reside outside of package '..config..' should depend on classes that reside in a package '..config..'' was violated (3 times):&#10;Class &lt;com.hobom.hobominternal.domain.log.HoBomLogLevel&gt; implements interface &lt;com.hobom.hobominternal.config.DescribableEnum&gt; in (HoBomLogLevel.kt:0)&#10;Class &lt;com.hobom.hobominternal.domain.service.HttpMethodType&gt; implements interface &lt;com.hobom.hobominternal.config.DescribableEnum&gt; in (HttpMethodType.kt:0)&#10;Class &lt;com.hobom.hobominternal.domain.service.ServiceType&gt; implements interface &lt;com.hobom.hobominternal.config.DescribableEnum&gt; in (ServiceType.kt:0)" type="java.lang.AssertionError">java.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - Rule 'no classes that reside outside of package '..config..' should depend on classes that reside in a package '..config..'' was violated (3 times):
Class &lt;com.hobom.hobominternal.domain.log.HoBomLogLevel&gt; implements interface &lt;com.hobom.hobominternal.config.DescribableEnum&gt; in (HoBomLogLevel.kt:0)
Class &lt;com.hobom.hobominternal.domain.service.HttpMethodType&gt; implements interface &lt;com.hobom.hobominternal.config.DescribableEnum&gt; in (HttpMethodType.kt:0)
Class &lt;com.hobom.hobominternal.domain.service.ServiceType&gt; implements interface &lt;com.hobom.hobominternal.config.DescribableEnum&gt; in (ServiceType.kt:0)
	at com.tngtech.archunit.lang.ArchRule$Assertions.assertNoViolation(ArchRule.java:94)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:86)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.check(ArchRule.java:165)
	at com.tngtech.archunit.lang.syntax.ObjectsShouldInternal.check(ObjectsShouldInternal.java:81)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:167)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:150)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="Inbound adapters must follow naming convention" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.0">
    <failure message="java.lang.AssertionError: Rule 'classes that reside in a package '..adapter.in..' should have simple name ending with 'Controller' or should have simple name ending with 'Handler'' failed to check any classes. This means either that no classes have been passed to the rule at all, or that no classes passed to the rule matched the `that()` clause. To allow rules being evaluated without checking any classes you can either use `ArchRule.allowEmptyShould(true)` on a single rule or set the configuration property `archRule.failOnEmptyShould = false` to change the behavior globally." type="java.lang.AssertionError">java.lang.AssertionError: Rule 'classes that reside in a package '..adapter.in..' should have simple name ending with 'Controller' or should have simple name ending with 'Handler'' failed to check any classes. This means either that no classes have been passed to the rule at all, or that no classes passed to the rule matched the `that()` clause. To allow rules being evaluated without checking any classes you can either use `ArchRule.allowEmptyShould(true)` on a single rule or set the configuration property `archRule.failOnEmptyShould = false` to change the behavior globally.
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.verifyNoEmptyShouldIfEnabled(ArchRule.java:201)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.evaluate(ArchRule.java:181)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:84)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.check(ArchRule.java:165)
	at com.tngtech.archunit.lang.syntax.ObjectsShouldInternal.check(ObjectsShouldInternal.java:81)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:167)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:150)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="Outbound adapters must follow naming convention" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.0">
    <failure message="java.lang.AssertionError: Rule 'classes that reside in a package '..adapter.out..' should have simple name ending with 'Repository' or should have simple name ending with 'Client'' failed to check any classes. This means either that no classes have been passed to the rule at all, or that no classes passed to the rule matched the `that()` clause. To allow rules being evaluated without checking any classes you can either use `ArchRule.allowEmptyShould(true)` on a single rule or set the configuration property `archRule.failOnEmptyShould = false` to change the behavior globally." type="java.lang.AssertionError">java.lang.AssertionError: Rule 'classes that reside in a package '..adapter.out..' should have simple name ending with 'Repository' or should have simple name ending with 'Client'' failed to check any classes. This means either that no classes have been passed to the rule at all, or that no classes passed to the rule matched the `that()` clause. To allow rules being evaluated without checking any classes you can either use `ArchRule.allowEmptyShould(true)` on a single rule or set the configuration property `archRule.failOnEmptyShould = false` to change the behavior globally.
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.verifyNoEmptyShouldIfEnabled(ArchRule.java:201)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.evaluate(ArchRule.java:181)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:84)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.check(ArchRule.java:165)
	at com.tngtech.archunit.lang.syntax.ObjectsShouldInternal.check(ObjectsShouldInternal.java:81)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:167)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:150)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="Inbound ports should be single-method interfaces" classname="com.hobom.hobominternal.architecture.HexagonalArchitectureTest" time="0.001">
    <failure message="java.lang.AssertionError: Rule 'classes that reside in a package '..application.port.in..' and are interfaces should have exactly one declared method' failed to check any classes. This means either that no classes have been passed to the rule at all, or that no classes passed to the rule matched the `that()` clause. To allow rules being evaluated without checking any classes you can either use `ArchRule.allowEmptyShould(true)` on a single rule or set the configuration property `archRule.failOnEmptyShould = false` to change the behavior globally." type="java.lang.AssertionError">java.lang.AssertionError: Rule 'classes that reside in a package '..application.port.in..' and are interfaces should have exactly one declared method' failed to check any classes. This means either that no classes have been passed to the rule at all, or that no classes passed to the rule matched the `that()` clause. To allow rules being evaluated without checking any classes you can either use `ArchRule.allowEmptyShould(true)` on a single rule or set the configuration property `archRule.failOnEmptyShould = false` to change the behavior globally.
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.verifyNoEmptyShouldIfEnabled(ArchRule.java:201)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.evaluate(ArchRule.java:181)
	at com.tngtech.archunit.lang.ArchRule$Assertions.check(ArchRule.java:84)
	at com.tngtech.archunit.lang.ArchRule$Factory$SimpleArchRule.check(ArchRule.java:165)
	at com.tngtech.archunit.lang.syntax.ObjectsShouldInternal.check(ObjectsShouldInternal.java:81)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:167)
	at com.tngtech.archunit.junit.internal.ArchUnitTestDescriptor$ArchUnitRuleDescriptor.execute(ArchUnitTestDescriptor.java:150)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <system-out><![CDATA[22:34:40.473 [Test worker] INFO com.tngtech.archunit.core.PluginLoader -- Detected Java version 17.0.10
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
